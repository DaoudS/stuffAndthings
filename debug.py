
import house
from house import House
import logging

house = House()

house.find_weather_station()
house.gather_weather_station_data(house.station)
logging.debug("DHWUsesgas VALUE: %s" % house.dhw_uses_gas())
logging.debug("cookingUsesgas VALUE: %s" % house.cooking_uses_gas())
logging.debug("heatingUsesgas VALUE: %s" % house.heating_uses_gas())
logging.debug("dryerUsesgas VALUE: %s" % house.dryer_uses_gas())
logging.debug("adjustedOccupancy VALUE: %s" % house.adjusted_occupancy())
logging.debug("HDDPerDegree VALUE: %s" % house.hdd_per_degree())
logging.debug("heatingCFM2UValue VALUE: %s" % house.heating_cfm2u_value())
logging.debug("coolingDt VALUE: %s" % house.cooling_dt())
logging.debug("EERMultiplier VALUE: %s" % house.eer_multiplier())
logging.debug("latentInfilMultiplier VALUE: %s" % house.latent_infil_multiplier())
logging.debug("latentCDHMultiplier VALUE: %s" % house.latent_cdh_multiplier())
logging.debug("latentEERMultiplier VALUE: %s" % house.latenteer_multiplier())
logging.debug("tColdWater VALUE: %s" % house.t_coldwater())

# Miscellaneous Calulations

logging.debug("CFM50AirLeakage VALUE: %s" % house.cfm50_airleakage())
logging.debug("heatingEfficiency VALUE: %s" % house.heating_efficiency())
logging.debug("gallonsOfHotWaterPerDay VALUE: %s" % house.gallons_o_hotwater_perday())
logging.debug("lighting VALUE: %s" % house.lighting())
logging.debug("refridgeration VALUE: %s" % house.refridgeration())
logging.debug("entertainment VALUE: %s" % house.entertaninment_val())
logging.debug("otherPlugLoads VALUE: %s" % house.other_plug_loads())
logging.debug("dryer VALUE: %s" % house.dryer())
logging.debug("cooking VALUE: %s" % house.cooking())
logging.debug("electricBaseloadTotal VALUE: %f" % house.electrib_baseload_total())
logging.debug("heatUA VALUE: %s" % house.heat_ua())
logging.debug("heatInfilUA VALUE: %s" % house.heat_infil_ua())
logging.debug("heatTotalUA VALUE: %s" % house.heating_total_ua())
logging.debug("DHWStandby VALUE: %s" % house.dhw_standby())
logging.debug("DHWHotWater VALUE: %s" % house.dhw_hotwater())
logging.debug("DHWTotal VALUE: %s" % house.dhw_total())
logging.debug("internalGainsBTUPerhour VALUE: %s" % house.internal_gain_btu_perhour())
logging.debug("htWindowSolar VALUE: %s" % house.ht_window_solar())
logging.debug("tFloat VALUE: %s" % house.t_float())
logging.debug("tBal VALUE: %s" % house.t_bal())
logging.debug("HDDEffective VALUE: %s" % house.hdd_effective())
logging.debug("ductHtgRegain VALUE: %s" % house.duct_htg_regain())
logging.debug("ductHtgDeliveryEff VALUE: %s" % house.duct_htg_delivery_eff())
logging.debug("htDistEfficiency VALUE: %s" % house.ht_dist_efficiency())
logging.debug("heatingUsage VALUE: %s" % house.heating_usage())
logging.debug("UAShell VALUE: %s" % house.ua_shell())
logging.debug("infiltration VALUE: %s" % house.infiltration())
logging.debug("roofExtraGain VALUE: %s" % house.roof_extra_gain())
logging.debug("TotalUA VALUE: %s" % house.total_ua())
logging.debug("coolTStatAdjust VALUE: %s" % house.cool_tstat_adjust())
logging.debug("coolingACEfficiency VALUE: %s" % house.cooling_ace_efficiency())
logging.debug("ductCLGRegain VALUE: %s" % house.duct_clg_regain())
logging.debug("ductCLGDeliveryEfficiency VALUE: %s" % house.duct_clg_delivery_efficiency())
logging.debug("CLDistEfficiency VALUE: %s" % house.cl_dist_efficiency())
logging.debug("coolEfficiency VALUE: %s" % house.cool_efficiency())
logging.debug("loadFromUA VALUE: %s" % house.load_from_ua())
logging.debug("internalGains VALUE: %s" % house.internal_gains())
logging.debug("windowCISolar VALUE: %s" % house.window_ci_solar())
logging.debug("coolingUsage VALUE: %s" % house.cooling_usage())
